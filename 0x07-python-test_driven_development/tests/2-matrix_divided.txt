>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> doc_module = __import__("2-matrix_divided").__doc__
>>> len_func = __import__("2-matrix_divided").matrix_divided.__doc__
>>> matrix_divided([[1, 2, 3], ["hello", 3 ,8.1]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1, 2, 3], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[2, 3, 4], [7, 8 ,9]], "I am div")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[2, 3, 4], [7, 8 ,9]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], [2, 3]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[6, 9, 12], [5, 10, 7]], 3)
[[2.0, 3.0, 4.0], [1.67, 3.33, 2.33]]
>>> matrix_divided([[], []], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> len(doc_module.splitlines()) > 1
True
>>> len(len_func.splitlines()) > 1
True
